/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views.Admin;

import Models.*;
import Controller.*;
import java.util.List;
import Controller.ColoniasDAO;

/**
 *
 * @author gerar
 */
public class AdminColonies extends javax.swing.JPanel {
    ColoniasDAO colonyDAO = new ColoniasDAO();

    /**
     * Creates new form AdminUsers
     */
    public AdminColonies() {
        initComponents();
        updateColonies(); //Actualizar combo box de colonias cada vez que entra al Panel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        zipLabel = new javax.swing.JLabel();
        settlementLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        zipField = new javax.swing.JPasswordField();
        roleComboBox = new javax.swing.JComboBox<>();
        insertButton = new javax.swing.JButton();
        colonyLabel = new javax.swing.JLabel();
        colonyComboBox = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        title1.setFont(new java.awt.Font("Bahnschrift", 1, 28)); // NOI18N
        title1.setText("ADMINISTRAR COLONIAS");

        nameLabel.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        nameLabel.setText("Nombre de Colonia:");

        zipLabel.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        zipLabel.setText("Código Postal:");

        settlementLabel.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        settlementLabel.setText("Tipo de Asentamiento:");

        nameTextField.setFont(new java.awt.Font("Poppins SemiBold", 0, 12)); // NOI18N
        nameTextField.setToolTipText("Ingresa el nombre de la colonia a agregar");

        zipField.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        zipField.setToolTipText("Ingresa el código postal de la colonia");

        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoge el tipo de asentamiento:", "Barrio", "Colonia", "Ejido", "Equipamiento", "Exhacienda", "Fraccionamiento", "Paraje", "Ranchería", "Rancho", "Unidad habitacional", "Zona industrial", "Zona militar" }));
        roleComboBox.setToolTipText("Escoge el tipo de asentamiento asignado para la colonia");

        insertButton.setBackground(new java.awt.Color(128, 237, 153));
        insertButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        insertButton.setForeground(new java.awt.Color(0, 0, 0));
        insertButton.setText("AGREGAR");
        insertButton.setToolTipText("Agregar una nueva colonia");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        colonyLabel.setFont(new java.awt.Font("Poppins Medium", 1, 14)); // NOI18N
        colonyLabel.setText("Colonia:");

        colonyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoge la colonia:" }));
        colonyComboBox.setToolTipText("Escoger una colonia para actualizar o eliminar");

        updateButton.setBackground(new java.awt.Color(20, 145, 155));
        updateButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 0, 0));
        updateButton.setText("ACTUALIZAR");
        updateButton.setToolTipText("Actualizar una colonia");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 0, 0));
        deleteButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        deleteButton.setText("ELIMINAR");
        deleteButton.setToolTipText("Elimina una colonia");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(33, 58, 87));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jLabel2.setText("SISTEMA DE LIMPIEZA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(413, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(402, 402, 402))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel2)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title1)
                        .addGap(428, 428, 428))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(zipLabel)
                            .addComponent(nameLabel))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(zipField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(376, 376, 376))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(insertButton)
                        .addGap(545, 545, 545))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(settlementLabel)
                        .addGap(47, 47, 47)
                        .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(376, 376, 376))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(updateButton)
                        .addGap(334, 334, 334)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(302, 302, 302))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(colonyLabel)
                        .addGap(34, 34, 34)
                        .addComponent(colonyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(340, 340, 340))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44)
                .addComponent(title1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipLabel)
                    .addComponent(zipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settlementLabel)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(insertButton)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colonyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colonyLabel))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton))
                .addContainerGap(184, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Evento del botón AGREGAR, aquí se manejarán las inserciones.
    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        if (nameTextField.getText().trim().isEmpty() ||
                zipField.getText().trim().isEmpty()||
        roleComboBox.getSelectedIndex() == 0) {
        
        // Mostrar mensaje de error si faltan campos
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Por favor, rellene todos los campos antes de continuar.", 
            "Error", 
            javax.swing.JOptionPane.ERROR_MESSAGE);
    } else {
        // Aquí iría la lógica para insertar el empleado
         String nombre = nameTextField.getText().trim();
        int codigoPostal;
        try {
            codigoPostal = Integer.parseInt(zipField.getText().trim());
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "El código postal debe ser un número válido.", 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return; // Salir del método si el código postal no es válido
        }
        String tipoAsentamiento = (String) roleComboBox.getSelectedItem();

        // Crear la colonia
        Colonia nuevaColonia = new Colonia();
        nuevaColonia.setNombre(nombre);
        nuevaColonia.setCodigoPostal(codigoPostal);
        nuevaColonia.setTipoAsentamiento(tipoAsentamiento);

        // Llamar al DAO para insertar la colonia
        try {
            colonyDAO.agregarColonia(nuevaColonia);
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Colonia registrada exitosamente.", 
                "Éxito", 
                javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Actualizar ComboBoxes después de insertar
            updateColonies();
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al registrar la colonia: " + ex.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
        updateColonies();
    }//GEN-LAST:event_insertButtonActionPerformed

    // Evento del botón ACTUALIZAR, aquí se manejarán las actualizaciones.
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        
        // IMPORTANTE: Tomar ID de colonia del ComboBox
         updateColonies(); //Después de actualizar debe actualizar el combo box
    }//GEN-LAST:event_updateButtonActionPerformed

    // Evento del botón ELIMINAR, aquí se manejarán los elementos eliminados.
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String coloniaSeleccionada = (String) colonyComboBox.getSelectedItem();
        System.out.println("Texto seleccionado: " + coloniaSeleccionada); // Debug

        try {
            // Extraer el ID de la colonia del texto (formato: "ID: <id> Colonia: <nombre>")
            int idColonia = Integer.parseInt(coloniaSeleccionada.split(":")[1].trim().split(" ")[0]);
            System.out.println("ID extraído: " + idColonia); // Debug

            // Confirmar eliminación con el usuario
            int confirmacion = javax.swing.JOptionPane.showConfirmDialog(this, 
                "¿Está seguro de que desea eliminar esta colonia?\n" + coloniaSeleccionada, 
                "Confirmar eliminación", 
                javax.swing.JOptionPane.YES_NO_OPTION);

            if (confirmacion == javax.swing.JOptionPane.YES_OPTION) {
                // Llamar al DAO para eliminar la colonia
                colonyDAO.eliminarColonia(idColonia);
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Colonia eliminada exitosamente.", 
                    "Éxito", 
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

                // Actualizar los ComboBoxes y tabla
                updateColonies();
            }
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al eliminar la colonia: " + ex.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    // Actualizar combo box de usuarios
    private void updateColonies(){
        List<Colonia> colonies = colonyDAO.obtenerTodasLasColonias();
        colonyComboBox.removeAllItems();
        
        for(Colonia colony: colonies){
            colonyComboBox.addItem("ID: " + colony.getId_colonia() + " Colonia: " + colony.getNombre());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> colonyComboBox;
    private javax.swing.JLabel colonyLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JLabel settlementLabel;
    private javax.swing.JLabel title1;
    private javax.swing.JButton updateButton;
    private javax.swing.JPasswordField zipField;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables
}
